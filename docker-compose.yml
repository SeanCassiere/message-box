version: "3"
services:
  api-gateway:
    container_name: api-gateway
    environment:
      RANDOM_ENV_VARIABLE: RANDOM_ENV_VARIABLE_VALUE
    build:
      context: ./api-gateway
      dockerfile: "./api-gateway/Dockerfile"
      target: base
    depends_on:
      - auth-service
      - application-data-service
    ports:
      - "4000:5000"
    volumes:
      - ./api-gateway:/opt/app
    command: yarn watch

  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: "Dockerfile"
      target: base
    volumes:
      - ./auth-service:/opt/app
    depends_on:
      - auth-service-db
    ports:
      - "7100:4000"
    command: yarn watch

  auth-service-db:
    image: postgres
    user: postgres
    environment:
      POSTGRES_DB: auth-service-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pgdata/auth-service:/var/lib/postgresql/data/
    ports:
      - "7200:5432"

  application-data-service:
    container_name: application-data-service
    build:
      context: ./application-data-service
      dockerfile: "Dockerfile"
      target: base
    volumes:
      - ./application-data-service:/opt/app
    depends_on:
      - application-data-service-db
    ports:
      - "7101:4000"
    command: yarn watch

  application-data-service-db:
    image: postgres
    user: postgres
    environment:
      POSTGRES_DB: application-data-service-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pgdata/application-data-service:/var/lib/postgresql/data/
    ports:
      - "7201:5432"
